<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer">
    <description>The coding standard for PHP_CodeSniffer itself.</description>




    <arg name="ignore" value="features/*,tests/*,*/Http/Kernel.php,*/Exceptions/Handler.php,*/Providers/RouteServiceProvider.php,*/Http/Middleware/Authenticate.php,*/Console/Kernel.php,*/Middleware/*"/>

    <!--<arg name="report" value="checkstyle"/>-->
    <!--<arg name="report-file" value="build/phpcs/report.xml"/>-->
    <!--<arg value="ps"/>-->

    <rule ref="PSR2">
        <exclude name="PSR2.Namespaces.UseDeclaration.MultipleDeclarations"/>
    </rule>

    <rule ref="Squiz.Commenting">
        <exclude name="Squiz.Files.FileExtension.ClassFound"/>
        <exclude name="Squiz.Commenting.InlineComment"/>
        <exclude name="Squiz.Commenting.FileComment.Missing"/>
        <exclude name="Squiz.Commenting.ClosingDeclarationComment.Missing"/>
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/>

        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNotCapital"/>
        <exclude name="Squiz.Commenting.BlockComment.WrongStart"/>



    </rule>

    <rule ref="PEAR.Commenting.ClassComment">
        <!-- To juÅ¼ robi Squiz -->
        <exclude name="PEAR.Commenting.FileComment.Missing"/>
        <exclude name="PEAR.Commenting.ClassComment.Missing"/>
        <exclude name="PEAR.Commenting.ClassComment.MissingCategoryTag"/>
        <exclude name="PEAR.Commenting.FunctionComment.Missing"/>
        <exclude name="PEAR.Commenting.FunctionComment.MissingReturn"/>


        <!-- To nie jest wymagane -->
        <exclude name="PEAR.Commenting.ClassComment.MissingLinkTag"/>
        <exclude name="PEAR.Commenting.ClassComment.MissingLicenseTag"/>
    </rule>




    <!--Generic.CodeAnalysis.UnusedFunctionParameter.Found-->

    <!--<rule ref="Generic">-->
    <!--<exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed"/>-->
    <!--<exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine"/>-->
    <!--<exclude name="Generic.Files.LowercasedFilename.NotFound"/>-->
    <!--<exclude name="Generic.PHP.ClosingPHPTag.NotFound"/>-->
    <!--<exclude name="Generic.PHP.UpperCaseConstant.Found"/>-->
    <!--<exclude name="Generic.Files.EndFileNoNewline.Found"/>-->
    <!--<exclude name="Generic.Formatting.SpaceAfterNot.Incorrect"/>-->
    <!--<exclude name="Generic.Formatting.SpaceAfterCast"/>-->
    <!--<exclude name="Generic.Formatting.NoSpaceAfterCast"/>-->
    <!--<exclude name="Generic.Commenting.DocComment.TagValueIndent"/>-->
    <!--</rule>-->



    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found"/>

    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <properties>
            <!-- If TRUE, the string must not have two capital letters next to each other -->
            <property name="strict" value="0"/>
        </properties>
    </rule>

    <rule ref="Generic.Files.LineLength">
        <properties>
            <!-- allow max 160 characters in one line -->
            <property name="absoluteLineLimit" value="150"/>
            <property name="lineLimit" value="150"/>
        </properties>
    </rule>


    <!--<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.Found">-->
        <!--<type>error</type>-->
    <!--</rule>-->

    <!--<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.Found">-->
        <!--<type>error</type>-->
    <!--</rule>-->

    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement.Found">
        <type>error</type>
    </rule>

    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed">
        <type>error</type>
    </rule>



    <rule ref="Generic.Metrics"/>
</ruleset>